GITHUB: https://github.com/ehawkvu/Paint

Paint 0.2.1 - Where is my Mind? - 9/29/20

Song: https://www.youtube.com/watch?v=49FB9hhoO6c

New Features:
	* Autosave toggle (available under the help menu)
	* Added more JavaDoc
		- As Always
	* Added a warning when saving as a different file format than what the original file was
	* Gaussian Blur tool works!!! (EXTRA)
	* Undo/Redo now work as intended
	* Added in a simple version of live draw for some tools
		- Currently supported: Rectangle, Blur, Drag & Drop
		- Will be updated in the future to support more tools
	* Added in Unit Tests for every method in the CustomTab class and the ModeMenu class

Known Bugs:
	* Support for Paint in a non-tabbed mode has been phased out, the Paint source tree now only uses tabs
	* The thread for autosaving constantly complains that it is not a javafx thread, so that bug needs to be solved

Expected Features:
	* Support for a Rotate option
	* Support for a Sepia option
	* Theming
	* AutoSave


Paint 0.2.0 - Paint it, Black - 9/21/20

Song: https://www.youtube.com/watch?v=Uf1TWSMCfWE

Second Minor Release!!!

New Features:
	* Paint now supports using TABS!!!!! (EXTRA)
		- This means you can have mulitple images open at once and switch between them.
	* Added in A Drag and Drop Feature!!!
		- This is the "big feature"
	* New Text Box Draw option!
	* In the about Window, it links to this document (on github)
	* New Cropping Tool (Extra)
	* New Blur Tool (Extra)
		- Still experimental at this stage, doesn't work exactly as intended. (so is disabled by default)
		- I want to figure out how to properly implement this tool, my thought is that you can draw a rectangle and the blur tool will apply a blur effect to the selected area (similar to the drag and drop)
	* Added an Equilateral Triangle as a drawing option!
	* Added an "Options" text field to allow for more complex operations on cetain draw commands
		- Should serve as a general place to allow for finer grained control
	* Added the ability to Draw an N-gon (using the new Options text field as an input for "N")
	* Added more JavaDoc where it's needed.
		- Most Classes now have JavaDoc in some form
	* The color picker is now owned by paint, and allows you to pick colors from one image, and use them in a different image
	* CustomCanvas objects no longer have their own brushSize, there is now a global brushSize manage by Paint itself
		- Having the CustomCanvas objects behave the old way gave me Null Pointer Exceptions when using Paint tabbed
	* Added a Redo Button to the Edit tool bar
	* Added a "None" tool, which is the default.

Known Bugs:
	* Doesn't currently display the shape/line being drawn, this should be easy to remedy (I believe it would just involve drawing a shape onto the scrollpane and canvas, then disabling the one on the scrollpane), but because I extended Pain(t) to support tabs, this feature had to wait.
	* Making the Undo & Redo methods work properly, and have a proper algorithm in place.


Expected Features:
	* Theming Support!!!
	* Live Drawing of shapes/lines
	* Auto Saving

Paint 0.1.0 - Down with the Sickness - 9/11/20

First Minor Release!

Song: https://www.youtube.com/watch?v=Ea6JCPUfito

New Features:
	* Removed Edit Menu, as it was clunky and unintuitive.
		- Replaced with an Edit ToolBar
	* Added View Menu
		- Has both zoom in and zoom out (plus a reset)
			- Resizes the Canvas, and thus Image (Feature, not a bug)
	* Added Mode Menu
		- Now has keyboard shortcuts! (ESC to go to default menu, and CTRL+E for edit menu)
	* Can Now Draw Straight Lines!
	* Can Now Draw: Squares, Rectangles, Circles, & Ellipses
		- Only fill supported, no frames.
	* Added a primitive Stack-Based Undo system
	* Added a "Smart"-er save
		- Now if you create a new file, and you "Save", it will open the "Save As" prompt
	* Fixed the Bug with trying to save images as a format that isn't a PNG
		- TLDR: You can save as whatever format now!
	* Stared work on Writing JavaDoc Comments throughout the code
		- Also updated some older comments
	* Now have a Color Grabber!!
		- Available in the EditToolBar combobox

Known Bugs:
	* Missing JavaDoc
		- The code isn't clear in some areas (lack of doc)
	* When undo-ing an action, it may take dozens of presses of the undo button, because there are too
		many images in the stack.
	* "Reset" function under the view menu doesn't quite work yet
	* The zoom in/out features don't work exactly how I inted for them to work

Expected Features:
	* Theming Support


Paint 0.0.2 - When the Pizza Roll is too Hot - 9/4/20

New Features:
	* New "Edit" menu (With a Draw & Erase option)
	* Added the ability to remove pixels with an "Erase" CheckMenuItem (under the Edit menu).
	* Added the ability to draw a line with an "Line" CheckMenuItem (under Edit/Draw menu).
	* Added a "Edit Options" window, that allows you to select the brush size, as well as the color for drawing
	* Added a "New" option under the File menu, bringing up a dialog box to create a new image
	* The Canvas is also wrapped in a ScrollPane, to allow a complete view via scrolling.
	* The Canvas' dimensions are now updated on the fly to fit the opened image.
	* Work is being done to have Paint be a modal image editor.
	* Keyboard Shortcuts are now a thing!!
	* Switched to using a VBox for the root pane.
	* Now using a Canvas instead of an ImageView for presenting images.

Known Issues:
	* Need to find an elegant way of drawing lines and other shapes on the canvas (maybe through a popup window?)
	* Currently Save and Save As can only save an image as a PNG, not as any other format (The program can still open files of any format, it just can't save as them)
	* Java Doc!!! This needs to be done

Expected Features:
	* Autosave functionality
	* Drawing Geometric shapes (squares, circles, n-sided polygon)?
	* Blur tool?
	* Tutorial? (new editing style, that being a modal editor)
	* Dark Mode (theming)

Links:
	GitHub: https://github.com/ehawkvu/Paint


Paint 0.0.1 - Calm before the Storm - 8/28/20

New Features:
	* Can open/save/saveas/view images
	* "Save" overwrites the original image with the correct image format
	* "Save As" can save a specified output image in the correct format^1
	* Can clear out the currently selected image
	* Can exit via the file menu
	* Has a menubar (with a "File" and "Help" menu)
	* Has a primitive "About" window
	* Extened the MenuBar class (Now CustomMenuBar), to handle all of the MenuBar code.
	* Basic filetype detection (through getting the file's extension)

Known Issues:
	* To make sure that the menubar visible, I have reduced the image size to be a max of 500 x 500 (via ImageView.setFitHeight & setFitWidth), the ratio is still preserved though.

Expected Features:
	* Expand the help menu. Add in a license window
	* A filetype detection system on opened images.
	* A file handler?

Links:
	* None yet... (but there will be soon)

Footnotes:
	1 - let's say that you open a png image, and in the "Save As" window you want to save the image as a jpeg, instead of defaulting to png
